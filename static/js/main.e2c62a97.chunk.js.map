{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","types/TableHeader.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleTable.tsx","api.ts","types/Filters.ts","components/PeopleFilters.tsx","pages/PeoplePage.tsx","utils/getVisiblePeople.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","HomePage","NotFoundPage","Loader","PersonLink","name","slug","sex","useSearchParams","searchParams","pathname","search","toString","TableHeader","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","tableHeaders","Name","Sex","Born","Died","Mother","Father","PeopleTable","people","collection","sortBy","isReversed","useParams","map","header","sortable","firstClick","secondClick","thirdClick","sort","order","toLowerCase","person","born","died","motherName","fatherName","mother","find","parent","father","mum","dad","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","Gender","Century","centuries","XVI","XVII","XVIII","XIX","XX","genders","title","Male","param","Female","PeopleFilters","selectedGender","query","selectedCenturies","setSearchParams","gender","type","placeholder","onChange","event","target","century","includes","filter","prev","length","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","get","getAll","sortByURL","charAt","toUpperCase","slice","loadPeople","useEffect","visiblePeople","normalizedQuery","includesQuery","criteria","currentQuery","a","b","localeCompare","reverse","getVisiblePeople","preparedTable","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e2c62a97.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  })\n);\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink to=\"/\" className={getLinkClass}>\n          Home\n        </NavLink>\n        <NavLink to=\"/people\" className={getLinkClass}>\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <Outlet />\n  </div>\n);\n","export const HomePage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\n\ntype Props = {\n  name: string | null;\n  slug: string;\n  sex: string;\n};\n\nexport const PersonLink: React.FC<Props> = ({ name, slug, sex }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${slug}`,\n        search: searchParams.toString(),\n      }}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","export enum TableHeader {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n  Mother = 'Mother',\n  Father = 'Father',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { TableHeader } from '../types/TableHeader';\nimport { SearchLink } from './SearchLink';\n\nconst tableHeaders = [\n  TableHeader.Name,\n  TableHeader.Sex,\n  TableHeader.Born,\n  TableHeader.Died,\n  TableHeader.Mother,\n  TableHeader.Father,\n];\n\ntype Props = {\n  people: Person[];\n  collection: Person[];\n  sortBy: TableHeader | string | null;\n  isReversed: string | null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  collection,\n  sortBy,\n  isReversed,\n}) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeaders.map(header => {\n            const sortable = header !== TableHeader.Mother\n              && header !== TableHeader.Father;\n\n            const firstClick = sortBy !== header;\n            const secondClick = sortBy === header && !isReversed;\n            const thirdClick = sortBy === header && !!isReversed;\n            let sort = null;\n            let order = null;\n\n            if (firstClick) {\n              sort = header.toLowerCase();\n              order = null;\n            }\n\n            if (secondClick) {\n              sort = header.toLowerCase();\n              order = 'desc';\n            }\n\n            if (thirdClick) {\n              sort = null;\n              order = null;\n            }\n\n            return (\n              <th key={header}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {header}\n\n                  {sortable && (\n                    <SearchLink\n                      params={{ sort, order }}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={classNames('fas', {\n                            'fa-sort': firstClick,\n                            'fa-sort-up': secondClick,\n                            'fa-sort-down': thirdClick,\n                          })}\n                        />\n                      </span>\n                    </SearchLink>\n                  )}\n                </span>\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n          } = person;\n\n          const mother = collection.find(parent => parent.name === motherName);\n          const father = collection.find(parent => parent.name === fatherName);\n\n          const mum = mother\n            ? (\n              <PersonLink\n                name={motherName}\n                sex={mother.sex}\n                slug={mother.slug}\n              />\n            )\n            : motherName;\n\n          const dad = father\n            ? (\n              <PersonLink\n                name={fatherName}\n                sex={father.sex}\n                slug={father.slug}\n              />\n            )\n            : fatherName;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  name={name}\n                  sex={sex}\n                  slug={person.slug}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {motherName\n                  ? mum\n                  : '-'}\n              </td>\n\n              <td>\n                {fatherName\n                  ? dad\n                  : '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum Gender {\n  All = 'All',\n  Male = 'Male',\n  Female = 'Female',\n}\n\nexport enum Century {\n  XVI = '16',\n  XVII = '17',\n  XVIII = '18',\n  XIX = '19',\n  XX = '20',\n}\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { Century, Gender } from '../types/Filters';\nimport { SearchLink } from './SearchLink';\n\nconst centuries = [\n  Century.XVI,\n  Century.XVII,\n  Century.XVIII,\n  Century.XIX,\n  Century.XX,\n];\n\nconst genders = [\n  { title: Gender.Male, param: 'm' },\n  { title: Gender.Female, param: 'f' },\n];\n\ntype Props = {\n  selectedGender: string | null;\n  query: string;\n  selectedCenturies: Century[] | string[];\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  selectedGender,\n  query,\n  selectedCenturies,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (event.target.value) {\n      params.set('query', event?.target.value);\n    } else {\n      params.delete('query');\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({\n            'is-active': !selectedGender,\n          })}\n        >\n          All\n        </SearchLink>\n\n        {genders.map(gender => (\n          <SearchLink\n            key={gender.param}\n            params={{ sex: gender.param }}\n            className={classNames({\n              'is-active': selectedGender === gender.param,\n            })}\n          >\n            {gender.title}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            value={query}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': selectedCenturies.includes(century),\n                })}\n                params={{\n                  centuries: selectedCenturies.includes(century)\n                    ? selectedCenturies.filter(prev => prev !== century)\n                    : [...selectedCenturies, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': selectedCenturies.length,\n              })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: selectedGender && null,\n            query: query && null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { getVisiblePeople } from '../utils/getVisiblePeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [searchParams] = useSearchParams();\n  const selectedGender = searchParams.get('sex') || null;\n  const query = searchParams.get('query') || '';\n  const selectedCenturies = searchParams.getAll('centuries') || [];\n  const isReversed = searchParams.get('order') || null;\n  const sortByURL = searchParams.get('sort') as keyof Person;\n  const sortBy = sortByURL\n    ? sortByURL.charAt(0).toUpperCase() + sortByURL.slice(1)\n    : null;\n\n  const loadPeople = async () => {\n    try {\n      const response = await getPeople();\n\n      setPeople(response);\n      setIsLoading(false);\n    } catch {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const visiblePeople = getVisiblePeople({\n    people,\n    selectedGender,\n    query,\n    selectedCenturies,\n    sortBy,\n    sortByURL,\n    isReversed,\n  });\n\n  const preparedTable = visiblePeople.length && !isLoading\n    ? (\n      <PeopleTable\n        people={visiblePeople}\n        collection={people}\n        sortBy={sortBy}\n        isReversed={isReversed}\n      />\n    )\n    : <p>There are no people matching the current search criteria</p>;\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              {!isLoading && (\n                <PeopleFilters\n                  selectedGender={selectedGender}\n                  query={query}\n                  selectedCenturies={selectedCenturies}\n                />\n              )}\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {isLoading\n                  ? <Loader />\n                  : preparedTable}\n\n                {isError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {!people.length && !isLoading && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { Person } from '../types/Person';\nimport { Century } from '../types/Filters';\nimport { TableHeader } from '../types/TableHeader';\n\ntype VisiblePeople = {\n  people: Person[];\n  selectedGender: string | null;\n  query: string;\n  selectedCenturies: Century[] | string[];\n  sortBy: string | null;\n  sortByURL: keyof Person;\n  isReversed: string | null;\n};\n\nexport const getVisiblePeople = ({\n  people,\n  selectedGender,\n  query,\n  selectedCenturies,\n  sortBy,\n  sortByURL,\n  isReversed,\n}: VisiblePeople) => {\n  let visiblePeople = [...people];\n\n  if (selectedGender) {\n    visiblePeople = visiblePeople.filter(({ sex }) => {\n      switch (selectedGender) {\n        case 'm':\n        case 'f':\n          return sex === selectedGender;\n\n        default:\n          return sex;\n      }\n    });\n  }\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase();\n    const includesQuery = (\n      criteria: string | null,\n      currentQuery: string,\n    ) => {\n      return criteria?.toLowerCase().includes(currentQuery);\n    };\n\n    visiblePeople = visiblePeople.filter(person => (\n      includesQuery(person.name, normalizedQuery)\n        || includesQuery(person.motherName, normalizedQuery)\n        || includesQuery(person.fatherName, normalizedQuery)\n    ));\n  }\n\n  if (selectedCenturies.length) {\n    visiblePeople = visiblePeople.filter(({ born }) => (\n      selectedCenturies.includes((born + 100).toString().slice(0, 2) as Century)\n    ));\n  }\n\n  if (sortBy) {\n    visiblePeople.sort((a, b) => {\n      switch (sortBy) {\n        case TableHeader.Name:\n        case TableHeader.Sex:\n          return (a[sortByURL] as keyof Person)\n            .localeCompare((b[sortByURL] as keyof Person));\n\n        case TableHeader.Born:\n        case TableHeader.Died:\n          return (a[sortByURL] as number) - (b[sortByURL] as number);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visiblePeople.reverse();\n    }\n  }\n\n  return visiblePeople;\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}